[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Task",
        "importPath": "todo.models",
        "description": "todo.models",
        "isExtraImport": true,
        "detail": "todo.models",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "todo.migrations.0001_initial",
        "description": "todo.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Task',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('task', models.CharField(max_length=250)),",
        "detail": "todo.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "TaskAdmin",
        "kind": 6,
        "importPath": "todo.admin",
        "description": "todo.admin",
        "peekOfCode": "class TaskAdmin(admin.ModelAdmin):\n    list_display=('task','is_completed','updated_at')\n    search_fields=('task',)\nadmin.site.register(Task,TaskAdmin)",
        "detail": "todo.admin",
        "documentation": {}
    },
    {
        "label": "TodoConfig",
        "kind": 6,
        "importPath": "todo.apps",
        "description": "todo.apps",
        "peekOfCode": "class TodoConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'todo'",
        "detail": "todo.apps",
        "documentation": {}
    },
    {
        "label": "Task",
        "kind": 6,
        "importPath": "todo.models",
        "description": "todo.models",
        "peekOfCode": "class Task(models.Model):\n    task = models.CharField(max_length=250)\n    is_completed = models.BooleanField(default=False)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return self.task",
        "detail": "todo.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "todo.urls",
        "description": "todo.urls",
        "peekOfCode": "urlpatterns = [\n    #add task\n    path('addTask/',views.addTask,name='addTask'),\n    # markdone\n    path('mark_as_done/<int:pk>/',views.mark_as_done,name=\"mark_as_done\"),\n    # markundone\n    path('mark_as_undone/<int:pk>/',views.mark_as_undone,name=\"mark_as_undone\"),\n    # edit \n    path(\"edit_task/<int:pk>\",views.edit_task,name='edit_task'),\n    #delete",
        "detail": "todo.urls",
        "documentation": {}
    },
    {
        "label": "addTask",
        "kind": 2,
        "importPath": "todo.views",
        "description": "todo.views",
        "peekOfCode": "def addTask(request):\n    task = request.POST['task']\n    Task.objects.create(task=task)\n    return redirect('home')\ndef mark_as_done(request,pk):\n    task = get_object_or_404(Task,pk=pk)\n    task.is_completed = True\n    task.save()\n    return redirect('home')\ndef mark_as_undone(request,pk):",
        "detail": "todo.views",
        "documentation": {}
    },
    {
        "label": "mark_as_done",
        "kind": 2,
        "importPath": "todo.views",
        "description": "todo.views",
        "peekOfCode": "def mark_as_done(request,pk):\n    task = get_object_or_404(Task,pk=pk)\n    task.is_completed = True\n    task.save()\n    return redirect('home')\ndef mark_as_undone(request,pk):\n    task = get_object_or_404(Task,pk=pk)\n    task.is_completed = False\n    task.save()\n    return redirect('home')",
        "detail": "todo.views",
        "documentation": {}
    },
    {
        "label": "mark_as_undone",
        "kind": 2,
        "importPath": "todo.views",
        "description": "todo.views",
        "peekOfCode": "def mark_as_undone(request,pk):\n    task = get_object_or_404(Task,pk=pk)\n    task.is_completed = False\n    task.save()\n    return redirect('home')\ndef edit_task(request,pk):\n    get_task = get_object_or_404(Task,pk=pk)\n    if request.method == 'POST':\n        new_task = request.POST['task']\n        get_task.task = new_task",
        "detail": "todo.views",
        "documentation": {}
    },
    {
        "label": "edit_task",
        "kind": 2,
        "importPath": "todo.views",
        "description": "todo.views",
        "peekOfCode": "def edit_task(request,pk):\n    get_task = get_object_or_404(Task,pk=pk)\n    if request.method == 'POST':\n        new_task = request.POST['task']\n        get_task.task = new_task\n        get_task.save()\n        return redirect('home')\n    else:\n        context={\n            'get_task':get_task,",
        "detail": "todo.views",
        "documentation": {}
    },
    {
        "label": "delete_task",
        "kind": 2,
        "importPath": "todo.views",
        "description": "todo.views",
        "peekOfCode": "def delete_task(request,pk):\n    task = get_object_or_404(Task,pk=pk)\n    task.delete()\n    return redirect('home')",
        "detail": "todo.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "todo_main.asgi",
        "description": "todo_main.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "todo_main.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "todo_main.settings",
        "description": "todo_main.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-_cqig5p2(&j5u#h-7a39fm+-2vz-l+k%u-3*8ndgtd=lu%@33a'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "todo_main.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "todo_main.settings",
        "description": "todo_main.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-_cqig5p2(&j5u#h-7a39fm+-2vz-l+k%u-3*8ndgtd=lu%@33a'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "todo_main.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "todo_main.settings",
        "description": "todo_main.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "todo_main.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "todo_main.settings",
        "description": "todo_main.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'todo',",
        "detail": "todo_main.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "todo_main.settings",
        "description": "todo_main.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'todo',\n]\nMIDDLEWARE = [",
        "detail": "todo_main.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "todo_main.settings",
        "description": "todo_main.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'todo_main.urls'",
        "detail": "todo_main.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "todo_main.settings",
        "description": "todo_main.settings",
        "peekOfCode": "ROOT_URLCONF = 'todo_main.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': ['templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "todo_main.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "todo_main.settings",
        "description": "todo_main.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': ['templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',",
        "detail": "todo_main.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "todo_main.settings",
        "description": "todo_main.settings",
        "peekOfCode": "WSGI_APPLICATION = 'todo_main.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "todo_main.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "todo_main.settings",
        "description": "todo_main.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "todo_main.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "todo_main.settings",
        "description": "todo_main.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "todo_main.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "todo_main.settings",
        "description": "todo_main.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "todo_main.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "todo_main.settings",
        "description": "todo_main.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "todo_main.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "todo_main.settings",
        "description": "todo_main.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "todo_main.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "todo_main.settings",
        "description": "todo_main.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "todo_main.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "todo_main.settings",
        "description": "todo_main.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "todo_main.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "todo_main.settings",
        "description": "todo_main.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "todo_main.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "todo_main.urls",
        "description": "todo_main.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('',views.home,name='home'),\n    # to do\n    path('todo/',include('todo.urls')),\n]",
        "detail": "todo_main.urls",
        "documentation": {}
    },
    {
        "label": "home",
        "kind": 2,
        "importPath": "todo_main.views",
        "description": "todo_main.views",
        "peekOfCode": "def home(request):\n    tasks = Task.objects.filter(is_completed=False).order_by('-updated_at')\n    completed_tasks = Task.objects.filter(is_completed=True)\n    context = {\n        'tasks':tasks,\n        'completed_tasks':completed_tasks,\n    }\n    return render(request,'home.html',context)",
        "detail": "todo_main.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "todo_main.wsgi",
        "description": "todo_main.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "todo_main.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'todo_main.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]